const MAX_NAME_LENGHT = 75;
const MAX_DETAIL_LENGHT = 500;

// if($_SERVER['REQUEST_METHOD'] == 'POST')

$categories = get_categories($con);
$nav = include_template('categories.php', ['categories' => $categories]);


function getPostVal($name)
{
    return $_POST[$name] ?? "";
}



$errors = [];
$required_fields = ['lot-name', 'category', 'message', 'lot-rate', 'lot-step', 'lot-date'];

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    foreach ($required_fields as $field) {
        if (empty($_POST[$field])) {
            $errors[$field] = 'Поле не заполнено';
        }
    }

    if(!isset($errors['category'])){
        $category_id = [];
        foreach($categories as $catigory){
            array_push($category_id, $catigory['Id']);
        }

    }

    if (!isset($errors['lot-date'])) {
        if (!is_date_valid($_POST['lot-date']) || (time() >= strtotime($_POST['lot-date']))) {
            $errors['lot-date'] = 'Дата не должна быть пустой или меньше текущей';
        }
    }

    if (!isset($errors['lot-rate'])) {
        if (!filter_var($_POST['lot-rate'], FILTER_VALIDATE_INT)) {
            $errors['lot-rate'] = 'Цена должна быть натуральныим числом';
        } elseif ($_POST['lot-rate'] < 0) {
            $errors['lot-rate'] = 'Цена должна быть больше 0';
        }
    }

    if (!isset($errors['lot-step'])) {
        if (!filter_var($_POST['lot-step'], FILTER_VALIDATE_INT)){
            $errors['lot-step'] = 'Ставка должна быть натуральныим числом';
        } elseif ($_POST['lot-step'] < 1) {
            $errors['lot-step'] = 'Стаквка должна быть больше 0';
        }
    }


    if (!isset($errors['lot-name'])) {
        $len = strlen($_POST['lot-name']);
        if ($len > MAX_NAME_LENGHT) {
            $errors['lot-name'] = 'Значение должно быть меньше ' . MAX_NAME_LENGHT . ' символов';
        }
    }

    if (!isset($errors['message'])) {
        $len = strlen($_POST['message']);
        if ($len > MAX_DETAIL_LENGHT) {
            $errors['message'] = 'Значение должно быть меньше ' . MAX_DETAIL_LENGHT . ' символов';
        }
    }

    $temp = time();

    //Обработка изображения
    if ($_FILES) {
        if ($_FILES['image']['tmp_name'] !== "") {
            if (
                (mime_content_type($_FILES['image']['tmp_name']) == "image/png") || (mime_content_type($_FILES['image']['tmp_name']) == "image/jpeg")
                || (mime_content_type($_FILES['image']['tmp_name']) == "image/jpg")
            ) {
                $file_name = $_FILES['image']['name'];
                $file_path = __DIR__ . '/uploads/';
                $file_url = '/uploads/' . $temp . $file_name;
                move_uploaded_file($_FILES['image']['tmp_name'], $file_path . $temp . $file_name);
            } else {
                $errors['image'] = "Картинка должна быть в формате *.png, *.jpeg или *.jpg";
            }
        } else {
            $errors['image'] = "Добавте изображение";
        }
    }
    if (empty($errors)) {


        $addLot = add_lot(
            $_POST['lot-name'],
            $_POST['message'],
            '/uploads/' . $temp . $_FILES['image']['name'],
            $_POST['lot-rate'],
            $_POST['lot-date'],
            $_POST['lot-step'],
            $_POST['category'],
            $con
        );

        $lot = get_lot_by_id(
            $con,
            $addLot
        );

        foreach ($required_fields as $field) {
            [$field] = "";
        }



        if (http_response_code() === 404) {
            $page_content = include_template('404.php', ['nav' => $nav]);
        } else {
            $page_content = header('Location: /lot.php?Id=' . $addLot);
        }
        $layout = include_template('layout.php', [
            'title' => 'Главная',
            'is_auth' => $is_auth,
            'user_name' => $user_name,
            'nav' => $nav,
            'contetnt' => $page_content
        ]);

        print($layout);

    } else {
        $page_content = include_template('add-lot.php', ['errors' => $errors, 'nav' => $nav, 'categories' => $categories]);
        $layout = include_template('layout.php', [
            'title' => 'Главная',
            'is_auth' => $is_auth,
            'user_name' => $user_name,
            'nav' => $nav,
            'contetnt' => $page_content
        ]);
        print($layout);
    }
}else{


$page_content = include_template('add-lot.php', ['errors' => $errors, 'nav' => $nav, 'categories' => $categories]);
$layout = include_template('layout.php', [
    'title' => 'Главная',
    'is_auth' => $is_auth,
    'user_name' => $user_name,
    'nav' => $nav,
    'contetnt' => $page_content
]);
print($layout);
}






<?php
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Обработка данных здесь

        // Подключите файл с вашими классами
        require 'your_classes_file.php';

        // Создайте объект и вызовите метод actionCreate
        $dsn = "mysql:host=localhost;dbname=akhfvmxt_m4;charset=UTF8";
        $pdo = new PDO($dsn, 'akhfvmx', 'Tp83F6');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        $title = $_POST['title'];
        // Получите остальные значения из $_POST

        // Создание экземпляра класса в зависимости от типа продукта (CD или книга)
        if (!empty($playLength)) {
            $product = new CDProduct($title, $firstName, $mainName, $price, $playLength);
        } elseif (!empty($numPages)) {
            $product = new BookProduct($title, $firstName, $mainName, $price, $numPages);
        }

        // Вызов метода для добавления в базу данных
        if (isset($product)) {
            $product->actionCreate($pdo);
            echo "Запись успешно добавлена в базу данных.";
        }
    }
    ?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Добавление записи в базу данных</title>
</head>
<body>
    <h1>Добавление записи в базу данных</h1>

    <!-- Форма для добавления записи -->
    <form method="post" action="">
        <label for="title">Название продукта:</label>
        <input type="text" name="title" id="title" required>
        <br>

        <label for="firstName">Имя производителя:</label>
        <input type="text" name="firstName" id="firstName">
        <br>

        <label for "mainName">Фамилия производителя:</label>
        <input type="text" name="mainName" id="mainName">
        <br>

        <label for="price">Цена:</label>
        <input type="number" name="price" id="price" step="0.01" required>
        <br>

        <label for="playLength">Длительность воспроизведения (только для CD):</label>
        <input type="number" name="playLength" id="playLength">
        <br>

        <label for="numPages">Количество страниц (только для книги):</label>
        <input type="number" name="numPages" id="numPages">
        <br>

        <input type="submit" value="Добавить запись">
    </form>

    <?php
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Получение и обработка данных происходит здесь
        // Остальной PHP код, как описано выше
    }
    ?>
</body>
</html>






<!-- Форма для добавления записи -->
<form method="post" action="">
    <label for="title">Название продукта:</label>
    <input type="text" name="title" id="title" required>
    <br>

    <label for="firstName">Имя производителя:</label>
    <input type="text" name="firstName" id="firstName">
    <br>

    <label for="mainName">Фамилия производителя:</label>
    <input type="text" name="mainName" id="mainName">
    <br>

    <label for="price">Цена:</label>
    <input type="number" name="price" id="price" step="0.01" required>
    <br>

    <label for="playLength">Длительность воспроизведения (только для CD):</label>
    <input type="number" name="playLength" id="playLength">
    <br>

    <label for="numPages">Количество страниц (только для книги):</label>
    <input type="number" name="numPages" id="numPages">
    <br>

    <input type="submit" value="Добавить запись">
</form>

<?php
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Получаем данные из формы
    $title = $_POST['title'];
    $firstName = $_POST['firstName'];
    $mainName = $_POST['mainName'];
    $price = (float)$_POST['price'];
    $playLength = (float)$_POST['playLength'];
    $numPages = (int)$_POST['numPages'];

    // Создаем экземпляр класса в зависимости от типа продукта (CD или книга)
    if (!empty($playLength)) {
        $product = new CDProduct($title, $firstName, $mainName, $price, $playLength);
    } elseif (!empty($numPages)) {
        $product = new BookProduct($title, $firstName, $mainName, $price, $numPages);
    } else {
        // Дополнительная логика, если не удалось определить тип продукта
        echo "Не удалось определить тип продукта.";
    }

    // Вызываем метод для добавления в базу данных
    if (isset($product)) {
        $product->actionCreate($pdo);
        echo "Запись успешно добавлена в базу данных.";
    }
}
?>
